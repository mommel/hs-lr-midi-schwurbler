; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = teensylc, teensy32, teensy35, teensy36, teensy40, teensy41
description = Happy Shooting Commmunity Project Der Schwurbler is a diy MidiController to be used with Adobe Lightroom Classic

[common_env_data]
lib_deps = 
	Bounce2
build_flags = 
; -D LEDPIN=13 ; activate if led is present
; -D SIMULATE

[env:teensybase]
platform = teensy
upload_protocol = teensy-gui
framework = arduino
lib_deps = 
 	${common_env_data.lib_deps}
	ResponsiveAnalogRead
build_flags = 
	${common_env_data.build_flags}
	-D TEENSY 
	-D USB_MIDI_SERIAL
;-D USB_SERIAL
;-D USB_KEYBOARDONLY
;-D USB_TOUCHSCREEN
;-D USB_HID_TOUCHSCREEN
;-D USB_HID
;-D USB_SERIAL_HID
;-D USB_MIDI
;-D USB_MIDI4
;-D USB_MIDI16
;-D USB_MIDI4_SERIAL
;-D USB_MIDI16_SERIAL
;-D USB_AUDIO
;-D USB_MIDI_AUDIO_SERIAL
;-D USB_MIDI16_AUDIO_SERIAL
;-D USB_MTPDISK
;-D USB_RAWHID
;-D USB_FLIGHTSIM
;-D USB_FLIGHTSIM_JOYSTICK
;-D USB_EVERYTHING
;-D USB_DISABLED

[env:esp32base]
platform = espressif32
framework = arduino
upload_protocol = esptool
upload_speed = 921600
monitor_speed = 115200
build_flags = -D ESP32
lib_deps = 
	${common_env_data.lib_deps}
	ESP32 BLE Arduino
	;AppleMIDI

[env:teensylc]
extends = env:teensybase
board = teensylc

[env:teensy32]
extends = env:teensybase
board = teensy31

; Not yet supported below this line
[env:teensy40]
extends = env:teensybase
board = teensy40

[env:teensy35]
extends = env:teensybase
board = teensy35

[env:teensy36]
extends = env:teensybase
board = teensy36

[env:teensy41]
extends = env:teensybase
board_build.mcu = imxrt1062
board_build.f_cpu = 600000000L
board = teensy41

;; ESP 32
;[env:esp32dev]
;extends = env:esp32base
;board = esp32dev

;[env:featheresp32]
;board = featheresp32
;
;[env:wemos_d1_mini32]
;extends = env:esp32base
;board = wemos_d1_mini32
;
;[env:lolin_d32]
;extends = env:esp32base
;board = lolin_d32
;
;[env:ttgo-t1]
;extends = env:esp32base
;board = ttgo-t1
;  
;[env:ttgo-lora32-v1]
;extends = env:esp32base
;board = ttgo-lora32-v1
;
;[env:node32s]
;extends = env:esp32base
;board = node32s
;
;[env:nodemcu-32s]
;extends = env:esp32base
;board = nodemcu-32s