; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = teensy41
description = Happy Shooting Commmunity Project Der Schwurbler is a diy MidiController to be used with Adobe Lightroom Classic

[common_env_data]
lib_deps = 
	SchwurblerControllers
build_flags = 
	-D LEDPIN=13

[env:teensybase]
platform = teensy
upload_protocol = teensy-gui
monitor_speed = 56700
framework = arduino
lib_deps = 
	${common_env_data.lib_deps}
	mommel/SchwurblerControllers@^1.0.2
build_flags = 
	${common_env_data.build_flags}
	-D TEENSY
	-D USB_MIDI_SERIAL
check_tool = cppcheck, clangtidy
check_patterns = src
check_flags = 
	cppcheck: --std=c++20 --language=c++ --inline-suppr --enable=warning,performance,portability,information,unusedFunction,missingInclude --errorlist
	clangtidy: --format-style=google --system-headers --checks=-*,-google-*,-misc-*,-bugprone-*,performance-*,-readability-*
check_severity = low, medium, high

[env:teensylc]
extends = env:teensybase
board = teensylc
lib_deps = mommel/SchwurblerControllers@^1.0.2

[env:teensy32]
extends = env:teensybase
board = teensy31
lib_deps = mommel/SchwurblerControllers@^1.0.2

[env:teensy40]
extends = env:teensybase
board = teensy40
lib_deps = mommel/SchwurblerControllers@^1.0.2

[env:teensy35]
extends = env:teensybase
board = teensy35
lib_deps = mommel/SchwurblerControllers@^1.0.2

[env:teensy36]
extends = env:teensybase
board = teensy36
lib_deps = mommel/SchwurblerControllers@^1.0.2

[env:teensy41]
extends = env:teensybase
board_build.mcu = imxrt1062
board_build.f_cpu = 600000000L
board = teensy41
lib_deps = mommel/SchwurblerControllers@^1.0.2
